result <- data.frame(
max_values,
numeric_cols = colnames(numeric_df)
)
return(result)
}
highest_numerical_value(chil_reac1)
highest_numerical_value(doublecone)
highest_numerical_value(bf)
View(bf)
highest_numerical_value <- function(data) {
# Check if the data frame contains any numeric values
if(!(any(sapply(data, is.numeric)))) {
stop('None of the columns in the data frame are numeric')
}
# Add all the columns that are numeric to a data frame
check_numeric <- sapply(data, is.numeric)
numeric_df <- data[, check_numeric]
# Add the max values of each numeric columns to a matrix
max_values <- sapply(numeric_df, function(column) max(column, na.rm = TRUE))
return(max_values)
}
highest_numerical_value(bf)
max_val <- function(data) {
# Check if the data frame contains any numeric values
if(!(any(sapply(data, is.numeric)))) {
stop('None of the columns in the data frame are numeric')
}
# Add all the columns that are numeric to a data frame
check_numeric <- sapply(data, is.numeric)
numeric_df <- data[, check_numeric]
# Find the max value in each of the columns that contain numeric data
max_values <- sapply(numeric_df, function(column) max(column, na.rm = TRUE))
return(max_values)
}
max_val(DTR_adhd)
min_val <- function(data) {
# Check if the data frame contains any numeric values
if(!(any(sapply(data, is.numeric)))) {
stop('None of the columns in the data frame are numeric')
}
# Add all the columns that are numeric to a data frame
check_numeric <- sapply(data, is.numeric)
numeric_df <- data[, check_numeric]
# Find the max value in each of the columns that contain numeric data
min_values <- sapply(numeric_df, function(column) min(column, na.rm = TRUE))
return(min_values)
}
min_val(bf)
View(bf)
View(adhd)
View(chil_reac1)
dim(bf)
dim(chil_reac1)
ex_df <- data.frame(
boys = c('john','matthew','niall','roger'),
ages = c('21','22','23','24')
)
dim(ex_df)
max_val(ex_df)
exdf <- data.frame(
boys = c('john','matthew','niall','roger'),
ages = c(21,22,23,24)
)
dim(exdf)
max_val(exdf)
exdf <- data.frame(
boys = c('john','matthew','niall','roger'),
ages = c(21,22,23,24,
25,77,16,11)
)
exdf <- data.frame(
boys = c('john','matthew','niall','roger'),
ages = c(21,22,23,24,
25,77,16,11)
)
dim(exdf)
max_val(exdf)
tbf = t(bf)
View(tbf)
max_val(tbf)
max_val(bf)
View(bf)
num_class(bf)
sapply(bf, is.numeric)
max(bf$accuracy)
min_val(bf)
max_val(exdf)
exdf <- data.frame(
boys = c('john','matthew'),
ages = c(21,22,23,24,
25,77,16,11)
)
dim(exdf)
dim(bf)
max_val(exdf)
print(exdf)
table(exdf)
exdf <- data.frame(
boys = c('john','matthew'),
ages = c(21,22)
)
print(exdf)
table(exdf)
max_val(exdf)
max_val(ex_df)
exdf <- data.frame(
john = 21
matthew = 22
exdf <- data.frame(
john = 21,
matthew = 22
)
max_val(exdf)
exdf <- data.frame(
john = c(21,23,60,12),
matthew = c(22,11,5,78)
)
max_val(exdf)
print(bf$accuracy)
print(exdf$john)
print(chil_reac1$Group)
bfex = data.frame(
accuracy = bf$accuracy,
group = bf$group
)
View(bfex)
View(bf)
View(bfex)
max_val(bfex)
ran = runif(51, min = 0, max = 15)
bfex = data.frame(
accuracy = bf$accuracy,
group = bf$group,
random = ran
)
max_val(bfex)
max_val(exdf)
exdf <- data.frame(
john = c(21,23,60,12),
matthew = c(22,11,5,78),
verbs = c('run','walk','jump','leap')
)
max_val(exdf)
max_val(bf)
bfex1 = data.frame(
accuracy = bf$accuracy,
group = bf$group
)
max_val(bfex1)
max_val(bf)
max_val(bfex1)
max_val(bfex)
max_val(psymeta)
usethis::use_r(max_val())
usethis::use_r('max_val')
usethis::use_r('min_val')
devtools::document()
load("~/Projects/rcollectadhd/data/chil_reac1.rda")
View(chil_reac1)
usethis::use_r('chil_reac2')
devtools::document()
getwd()
devtools::check()
?devtools::build()
devtools::document()
devtools::use_gpl_license()
use_gpl_license()
usethis::use_gpl_license()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
?devtools::build()
devtools::build()
devtools::build()
library(styler)
style_file(C:/Users/johnm/Documents/Projects/adhd.copies/chil_reac1copy.R)
style_file(C://Users//johnm//Documents//Projects//adhd.copies//chil_reac1copy.R)
style_file("C://Users//johnm//Documents//Projects//adhd.copies//chil_reac1copy.R")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::build()
devtools::load_all()
data <- "smart"
data <- library(rcollectadhd)
library(rcollectadhd)
data <- student
View(data)
library(ggplot2)
ggplot(data,
aes(SleepPerDayHours)) +
geom_point()
ggplot(data,
aes(SleepPerDayHours)) +
geom_hitogram()
ggplot(data,
aes(SleepPerDayHours)) +
geom_histogram()
student <- student
bfd <- bf
View(bfd)
ggplot(bfd,
aes(x = group, y = accuracy)) +
geom_boxplot()
sd <- smart
View(sd)
colnames(sd) <- c("ID","s1.ODD","s1.ADHD","s1.med","s1.race","s1.int","res",
"no.res.t", "s1.ad","s2.int","y")
sd$no.res.t <- ifelse(sd$no.res.t == NA, 0, sd$no.res.t)
sd <- smart
getwd()
setwd("C:/Users/johnm/Documents/Projects/adhd/dev")
sd$no.res.t <- ifelse(sd$no.res.t == is.na, 0, sd$no.res.t)
sd <- smart
sd$no.res.t <- ifelse(is.na(sd$no.res.t), 0, sd$no.res.t)
colnames(sd) <- c("ID","s1.ODD","s1.ADHD","s1.med","s1.race","s1.int","res",
"no.res.t", "s1.ad","s2.int","y")
sd$no.res.t <- ifelse(is.na(sd$no.res.t), 0, sd$no.res.t)
setwd("C:/Users/johnm/Documents/Projects/adhd/dev/Analysis")
getwd()
#compute summary statistics
mean(sd$y)
#compute summary statistics
mean.y <- mean(sd$y)
setwd("C:/Users/johnm/Documents/Projects/adhd/dev")
str(sd)
as.factor(sd$res)
sd$res <- ifelse(sd$res == 1, "Responder", "Non-Responder")
table(sd$res)
#who scored better, responders or non-responders?
ggplot(sd,
aes(x = res, y = y)) +
geom_boxplot()
#who scored better, responders or non-responders?
ggplot(sd,
aes(x = res, y = y)) +
geom_bar()
#who scored better, responders or non-responders?
ggplot(sd,
aes(x = res, y = y)) +
geom_point()
library(usethis)
setwd("~/Projects/adhd/rcollectadhd")
use_testthat()
use_test("max_val")
devtools::test()
load("~/Projects/adhd/rcollectadhd/data/doublecone.rda")
View(doublecone)
load("~/Projects/adhd/rcollectadhd/data/psymeta.rda")
View(psymeta)
load("~/Projects/adhd/rcollectadhd/data/smart.rda")
View(smart)
load("~/Projects/adhd/rcollectadhd/data/student.rda")
View(student)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
devtools::load_all()
x <- data.frame(w = c(1,5,76,25), y = c("cat","dog","turtle","pigeon"), z = c(
12, 16, 89, 1.05
))
max_val(x)
test_that("max_val works", {
expect_equal(max_val(x), as.list(c(w,z),c(76,89)))
})
expect_equal(max_val(x), as.list(c("w","z"),c(76,89)))
is.list(max_val(x))
data.class(max_val(x))
class(max_val(x))
typeof(max.col(x))
x <- data.frame(w = c(1,5,76,25), y = c("cat","dog","turtle","pigeon"), z = c(
12, 16, 89, 1.05
))
typeof(max_val(x))
is.data.frame(max_val(x))
max_val1 <- function(data) {
# Check if the data frame contains any numeric columns
if( !(any(sapply(data, is.numeric)))) {
stop("None of the columns in the data frame are numeric")
}
# Add all the columns that are numeric to a data frame
check_numeric <- sapply(data, is.numeric)
numeric_df <- data[, check_numeric]
# Find the max value in each of the numeric columns
max_values <- as.data.frame(sapply(numeric_df, function(column) max(column,
na.rm =
TRUE)))
return(max_values)
}
x1 <- max_val1(x)
is.data.frame(x)
x1
max_val1 <- function(data) {
# Check if the data frame contains any numeric columns
if( !(any(sapply(data, is.numeric)))) {
stop("None of the columns in the data frame are numeric")
}
# Add all the columns that are numeric to a data frame
check_numeric <- sapply(data, is.numeric)
numeric_df <- data[, check_numeric]
# Find the max value in each of the numeric columns
max_values <- sapply(numeric_df, function(column) max(column,na.rm =TRUE))
return(as.data.frame(max_values))
}
x1 <- max_val1(x)
is.data.frame(x)
x1
devtools::document()
xmax <- max_val(x)
xmax
is.data.frame(xmax)
expect_equal(max_val(x), is.data.frame(max_val(x)) ==  TRUE)
is.data.frame(max_val(x))
is.data.frame(max_val(x)) == TRUE
max_val(x)
max_val(x) == xmax
expect_true(max_val(x), is.data.frame(max_val(x)) ==  TRUE)
expect_true(max_val(x), is.data.frame(max_val(x)))
is.list(xmax)
expect_true(max_val(x), is.list(max_val(x)))
expect_true(is.list(max_val(x)), is.list(max_val(x)))
expect_true(is.data.frame(max_val(x)))
test_that("max_val works", {
expect_true(is.data.frame(max_val(x)))
})
expect_equal(max_val(x), data.frame(max_values, c("w","z"), c("76","89")))
expect_equal(max_val(x), data.frame("max_values", c("w","z"), c("76","89")))
expect_equal(max_val(x), as.data.frame(max_values = c("w","z"), c("76","89")))
xmax
df <- as.data.frame(c("w","z"), c(76,89))
df <- as.data.frame(w = 76, z = 89)
df <- as.data.frame("w" = 76, "z" = 89)
df <- data.frame("w" = 76, "z" = 89)
df
df <- data.frame("max_values" = c("w", 76), c("z", 89))
df
df <- data.frame("max_values" = c("w", "z"), c(76, 89))
df
?data.frame
df <- data.frame("max_values" = c(76, 89), row.names = c("w","z"))
df
xmax
test_that("max_val works", {
expect_true(is.data.frame(max_val(x)))
expect_equal(max_val(x), data.frame("max_values" = c(76, 89), row.names =
c("w","z")))
})
test_that("max_val works", {
expect_true(is.data.frame(max_val(x)))
expect_equal(max_val(x), data.frame("max_values" = c(76, 89), row.names =
c("w","z")))
})
usethis::use_test('min_val')
x <- data.frame(w = c(1,5,76,25), y = c("cat","dog","turtle","pigeon"), z = c(
12, 16, 89, 1.05
))
devtools::document()
test_that("min_val works",{
expect_true(is.data.frame(min_val(x)))
expect_equal(min_val(x), data.frame("in_values" <- c(1, 1.05), row.names =
c("w","z")))
})
expect_equal(min_val(x), data.frame("min_values" <- c(1, 1.05), row.names =
c("w","z")))
expect_equal(max_val(x), data.frame("max_values" = c(76, 89), row.names =
c("w","z")))
test_that("max_val works", {
expect_true(is.data.frame(max_val(x)))
expect_equal(max_val(x), data.frame("max_values" = c(76, 89), row.names =
c("w","z")))
})
expect_equal(min_val(x), data.frame("min_values" = c(1, 1.05), row.names =
c("w","z")))
test_that("min_val works",{
expect_true(is.data.frame(min_val(x)))
expect_equal(min_val(x), data.frame("min_values" = c(1, 1.05), row.names =
c("w","z")))
})
data.frame("min_values" = c(1, 1.05), row.names = c("w","z")))
data.frame("min_values" = c(1, 1.05), row.names = c("w","z"))
min_val(x)
devtools::document()
devtools::build()
devtools::document()
devtools::build()
?rcollectadhd
devtools::load_all()
?rcollectadhd
devtools::document()
devtools::document()
devtools::build()
devtools::document()
?rcollectadhd
devtools::document()
?rcollectadhd
help('rcollectadhd')
ls(rcollectadhd)
ls('rcollectadhd')
ls(package::rcollectadhd)
ls("package::rcollectadhd")
ls(getNAMEspace)
devtools::load_all()
ls(getNAMEspace)
?ls()
list.files()
getNamespace()
getNamespace(rcollectadhd)
getNamespace("rcollectadhd")
devtools::document()
devtools:check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
devtools::load_all()
devtools::document()
devtools::document()
library('rcollectadhd')
ls(rcollectadhd)
help('rcollectadhd')
help(package = "rcollectadhd")
?ls()
ls("package:rcollectadhd")
ls(getNamespace("rcollectadhd"))
getNamespace("rcollectadhd")
help(package = "rcollectadhd")
desc::desc_get("Description")
devtools::document()
devtools::check()
apropos('rcollectadhd')
apropos(rcollectadhd)
help.search('rcollectadhd')
devtools::load_all()
package?rcollectadhd
library('rcollectadhd')
package?rcollectadhd
library('rcollectadhd')
package?rcollectadhd
library(help = "rcollectadhd")
ls("package:rcollectadhd", all.names = TRUE)
ls(getNamespace("rcollectadhd"), all.names = TRUE)
library(help = "rcollectadhd")
library(help = "rcollectadhd")
library(help = "ggplot2")
help(package = 'rcollectadhd')
library(help = "rcollectadhd")
devtools::load_all()
devtools::document()
devtools::check()
devtools::install()
library('rcollectadhd')
library(help = "rcollectadhd")
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::install()
library('rcollectadhd')
library(help = "rcollectadhd")
library(help = "ggplot2")
devtools::check()
devtools::check()
devtools::build()
devtools::check()
devtools::load_all()
devtools::install()
library(help = "rcollectadhd")
library(help = "ggplot2")
devtools::build()
devtools::check()
devtools::install()
library('rcollectadhd')
package?rcollectadhd
library(help = "rcollectadhd")
devtools::check()
devtools::install()
package?rcollectadhd
library('rcollectadhd')
package?rcollectadhd
library(help = "rcollectadhd")
library(help = "rcollectadhd")
library(help = "rcollectadhd")
devtools::load_all()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
